#Manifest Template

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/env/bin/python"
loader.log_level = "{{ log_level }}"
loader.env.LD_LIBRARY_PATH = "/lib:/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
loader.env.PYTHONUNBUFFERED="1"
loader.env.OMP_NUM_THREADS = "8"
loader.env.HOME="/home/iudx"
loader.insecure__use_cmdline_argv = true
#loader.env.PATH="/home/iudx/.cargo/bin:/home/iudx/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/iudx/linux-sgx/linux-sgx/linux/installer/bin/sgxsdk/bin:/home/iudx/linux-sgx/linux-sgx/linux/installer/bin/sgxsdk/bin/x64"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
{% for path in python.get_sys_path(entrypoint) %}
  { path = "{{ path }}", uri = "file:{{ path }}" },
{% endfor %}
  { path = "{{ entrypoint }}", uri = "file:{{ entrypoint }}" },
  { uri = "file:/etc", path = "/etc" },
  { type = "tmpfs", path = "/tmp/" },
  { path = "/yolov5", uri = "file:yolov5/" },
  { path = "/bin", uri = "file:/bin" },
  { path = "/env", uri = "file:/home/iudx/.env/sgx-yolo-app/" },
  { path = "/runyolo5.sh", uri = "file:runyolo5.sh"},
  { type = "encrypted", path = "/inputdata/", uri = "file:inputdata/", key_name = "_sgx_mrsigner" }
]

sys.enable_sigterm_injection = true
sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = false
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.nonpie_binary = true
sgx.enclave_size = "8G"
sgx.max_threads = 32

sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
{% for path in python.get_sys_path(entrypoint) %}
  "file:{{ path }}{{ '/' if path.is_dir() else '' }}",
{% endfor %}
  "file:PPDX_SDK.py",
  "file:SecureApp.py",
  "file:runSecureApp.py",
  "file:{{ python.get_path('stdlib', vars={'installed_base': '/usr/local'}) }}/",
  "file:/bin/",
  "file:yolov5/",
  "file:/home/iudx/.env/sgx-yolo-app/",
  "file:runyolo5.sh",
  "file:setState.sh",
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:config.json"
]

sgx.allowed_files = [
  "file:yolov5/runs/detect/",
  "file:yolov5/labels.json",
  "file:yolov5/runOutput.txt",
  "file:profiling.json"
]
